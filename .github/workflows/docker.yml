name: Publish Docker image
on:
  release:
    types: [published]
jobs:
  push_to_registry:
    name: Push Docker image to GitHub Packages
    strategy:
      fail-fast: false
      matrix:
        julia: ["1.0", 1.6, 1.7, 1.8]
        python: [3.7, 3.8, 3.9, 3.10, 3.11]
        debian: ["buster"]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: my-docker-hub-namespace/my-docker-hub-repository

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Prepare Dockerfile
        run: sh update.sh ${{ matrix.julia }} ${{ matrix.python }} ${{ matrix.debian }}
      - name: Check for file
        run: if [[ -f "Dockerfile" ]]; then echo "Dockerfile found"; else echo "Dockerfile not found"; fi

      - name: Create Tag
        run: |
          echo "build_tag=docker.pkg.github.com/$(echo ${{ github.repository }} | tr '[:upper:]' '[:lower:]')/python${{ matrix.python }}:${{ matrix.julia }}-${{ matrix.debian }}" >> $GITHUB_ENV
          echo "Tag: ${{ env.build_tag }}"
      - name: Build container image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ env.build_tag }}
          # tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Archive Dockerfile
        uses: actions/upload-artifact@v2
        with:
          name: "patched-Dockerfile:${{ matrix.python }}-${{ matrix.julia }}"
          path: ./Dockerfile

      - name: Cleanup
        run: if [[ -f "Dockerfile" ]]; then rm Dockerfile; fi
